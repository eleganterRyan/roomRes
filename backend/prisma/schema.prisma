datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum RoomStatus {
  AVAILABLE
  MAINTENANCE
  OCCUPIED
}

enum BookingStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}

model Room {
  id          String    @id @default(uuid())
  name        String
  capacity    Int
  facilities  String[]
  location    String
  roomStatus  RoomStatus @default(AVAILABLE)
  description String?
  floor       Int
  building    String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  bookings    Booking[] // 与Booking模型关联

  @@map("rooms")
}

model Booking {
  id          String   @id @default(cuid())
  roomId      String   
  title       String   
  startTime   DateTime 
  endTime     DateTime 
  attendees   Int      
  purpose     String?  
  applicant   String   
  status      BookingStatus @default(APPROVED)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 添加与 User 的关系
  userId      String    
  user        User      @relation(fields: [userId], references: [id])
  // 保持与 Room 的关系
  room        Room      @relation(fields: [roomId], references: [id])

  @@map("bookings")
}

model User {
  id         String    @id @default(uuid())
  username   String    @unique
  name       String
  password   String
  department String
  role       UserRole  @default(USER)
  phone      String?
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  bookings   Booking[]

  @@map("users")
}
